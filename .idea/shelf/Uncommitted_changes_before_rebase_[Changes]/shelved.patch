Index: src/app/profiles/[profileID]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* eslint-disable react/no-unescaped-entities */\r\nimport React from \"react\";\r\nimport { profiles } from \"@/lib/data/profile/profileData\";\r\nimport ProfileComp from \"@/components/Pages/Profile\";\r\nimport { BasicInfoAnimationWrapper } from \"@/components/Pages/Profile/components/BasicInfo/AnimationWrapper\";\r\nimport { BasicInfoSection } from \"@/components/Pages/Profile/components/BasicInfo\";\r\nimport { ExperienceSection } from \"@/components/Pages/Profile/components/Experience\";\r\nimport { SkillsSection } from \"@/components/Pages/Profile/components/Skills\";\r\nimport { SkillsSectionAnimationWrapper } from \"@/components/Pages/Profile/components/Skills/AnimationWrapper\";\r\nimport { EducationSectionAnimationWrapper } from \"@/components/Pages/Profile/components/Education/AnimationWrapper\";\r\nimport { EducationSection } from \"@/components/Pages/Profile/components/Education\";\r\nimport { ProfileFallback } from \"@/components/Pages/Profile/profileFallback\";\r\n\r\ninterface Props {\r\n  params: {\r\n    profileID: string;\r\n  };\r\n}\r\n\r\nexport async function generateStaticParams() {\r\n  return profiles.map((profile) => ({\r\n    profileID: profile.id,\r\n  }));\r\n}\r\n\r\nexport async function generateMetadata({ params }: Props) {\r\n  const id = params.profileID;\r\n  const profile = profiles.find((item) => item.id === id);\r\n\r\n  if (!profile) {\r\n    return {\r\n      title: \"profile not found\",\r\n      description: \"no description beacuse profile was not found\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    title: {\r\n      default: `profile of ${profile.name}`,\r\n      template: `%s | Profile of ${profile.name}`,\r\n    },\r\n    description: profile.shortDescription,\r\n    alternates: {\r\n      canonical: `/profiles/${profile.id}`,\r\n    },\r\n  };\r\n}\r\n\r\nconst ProfilePage = ({ params }: Props) => {\r\n  const id = params.profileID;\r\n  const profile = profiles.find((item) => item.id === id);\r\n\r\n  if (!profile) {\r\n    return <ProfileFallback />;\r\n  }\r\n\r\n  return (\r\n    <ProfileComp\r\n      profile={profile}\r\n      BasicInfo={\r\n        <BasicInfoAnimationWrapper>\r\n          <BasicInfoSection profile={profile} />\r\n        </BasicInfoAnimationWrapper>\r\n      }\r\n      Experience={<ExperienceSection experience={profile.experience} />}\r\n      Education={\r\n        <EducationSectionAnimationWrapper>\r\n          <EducationSection educations={profile.education} />\r\n        </EducationSectionAnimationWrapper>\r\n      }\r\n      ProfileSummary={\r\n        <>\r\n          {profile.awards ? (\r\n            <SkillsSectionAnimationWrapper>\r\n              <SkillsSection awards={profile.awards!} />\r\n            </SkillsSectionAnimationWrapper>\r\n          ) : null}\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/profiles/[profileID]/page.tsx b/src/app/profiles/[profileID]/page.tsx
--- a/src/app/profiles/[profileID]/page.tsx	
+++ b/src/app/profiles/[profileID]/page.tsx	
@@ -43,6 +43,9 @@
     alternates: {
       canonical: `/profiles/${profile.id}`,
     },
+    openGraph: {
+      images: [profile.image]
+    }
   };
 }
 
Index: src/app/profiles/[profileID]/opengraph-image.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/profiles/[profileID]/opengraph-image.tsx b/src/app/profiles/[profileID]/opengraph-image.tsx
deleted file mode 100644
--- a/src/app/profiles/[profileID]/opengraph-image.tsx	
+++ /dev/null	
@@ -1,34 +0,0 @@
-//opengraph image creation for dynamic metadata
-import { profiles } from "@/lib/data/profile/profileData";
-import Image from "next/image";
-import { ImageResponse } from "next/og";
-
-export const size = {
-  width: 500,
-  height: 500,
-};
-
-export const contentType = "image/png";
-
-interface PageProps {
-  params: {
-    profileID: number;
-  };
-}
-
-export default function og({ params }: PageProps) {
-  const id = params.profileID;
-  const profile = profiles.find((item) => item.id == String(id));
-
-  return new ImageResponse(
-    (
-      <Image
-        src={profile!.image}
-        alt={profile!.shortDescription}
-        width={500}
-        height={500}
-      />
-    ),
-    size
-  );
-}
Index: src/app/profiles/[profileID]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* eslint-disable react/no-unescaped-entities */\r\nimport React from \"react\";\r\nimport { profiles } from \"@/lib/data/profile/profileData\";\r\nimport ProfileComp from \"@/components/Pages/Profile\";\r\nimport { BasicInfoAnimationWrapper } from \"@/components/Pages/Profile/components/BasicInfo/AnimationWrapper\";\r\nimport { BasicInfoSection } from \"@/components/Pages/Profile/components/BasicInfo\";\r\nimport { ExperienceSection } from \"@/components/Pages/Profile/components/Experience\";\r\nimport { SkillsSection } from \"@/components/Pages/Profile/components/Skills\";\r\nimport { SkillsSectionAnimationWrapper } from \"@/components/Pages/Profile/components/Skills/AnimationWrapper\";\r\nimport { EducationSectionAnimationWrapper } from \"@/components/Pages/Profile/components/Education/AnimationWrapper\";\r\nimport { EducationSection } from \"@/components/Pages/Profile/components/Education\";\r\nimport { ProfileFallback } from \"@/components/Pages/Profile/profileFallback\";\r\n\r\ninterface Props {\r\n  params: {\r\n    profileID: string;\r\n  };\r\n}\r\n\r\nexport async function generateStaticParams() {\r\n  return profiles.map((profile) => ({\r\n    profileID: profile.id,\r\n  }));\r\n}\r\n\r\nexport async function generateMetadata({ params }: Props) {\r\n  const id = params.profileID;\r\n  const profile = profiles.find((item) => item.id === id);\r\n\r\n  if (!profile) {\r\n    return {\r\n      title: \"profile not found\",\r\n      description: \"no description beacuse profile was not found\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    title: {\r\n      default: `profile of ${profile.name}`,\r\n      template: `%s | Profile of ${profile.name}`,\r\n    },\r\n    description: profile.shortDescription,\r\n    alternates: {\r\n      canonical: `/profiles/${profile.id}`,\r\n    },\r\n  };\r\n}\r\n\r\nconst ProfilePage = ({ params }: Props) => {\r\n  const id = params.profileID;\r\n  const profile = profiles.find((item) => item.id === id);\r\n\r\n  if (!profile) {\r\n    return <ProfileFallback />;\r\n  }\r\n\r\n  return (\r\n    <ProfileComp\r\n      profile={profile}\r\n      BasicInfo={\r\n        <BasicInfoAnimationWrapper>\r\n          <BasicInfoSection profile={profile} />\r\n        </BasicInfoAnimationWrapper>\r\n      }\r\n      Experience={<ExperienceSection experience={profile.experience} />}\r\n      Education={\r\n        <EducationSectionAnimationWrapper>\r\n          <EducationSection educations={profile.education} />\r\n        </EducationSectionAnimationWrapper>\r\n      }\r\n      ProfileSummary={\r\n        <>\r\n          {profile.awards ? (\r\n            <SkillsSectionAnimationWrapper>\r\n              <SkillsSection awards={profile.awards!} />\r\n            </SkillsSectionAnimationWrapper>\r\n          ) : null}\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/profiles/[profileID]/page.tsx b/src/app/profiles/[profileID]/page.tsx
--- a/src/app/profiles/[profileID]/page.tsx	
+++ b/src/app/profiles/[profileID]/page.tsx	
@@ -43,6 +43,9 @@
     alternates: {
       canonical: `/profiles/${profile.id}`,
     },
+    openGraph: {
+      images: [profile.image]
+    }
   };
 }
 
Index: src/app/profiles/[profileID]/opengraph-image.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/profiles/[profileID]/opengraph-image.tsx b/src/app/profiles/[profileID]/opengraph-image.tsx
deleted file mode 100644
--- a/src/app/profiles/[profileID]/opengraph-image.tsx	
+++ /dev/null	
@@ -1,34 +0,0 @@
-//opengraph image creation for dynamic metadata
-import { profiles } from "@/lib/data/profile/profileData";
-import Image from "next/image";
-import { ImageResponse } from "next/og";
-
-export const size = {
-  width: 500,
-  height: 500,
-};
-
-export const contentType = "image/png";
-
-interface PageProps {
-  params: {
-    profileID: number;
-  };
-}
-
-export default function og({ params }: PageProps) {
-  const id = params.profileID;
-  const profile = profiles.find((item) => item.id == String(id));
-
-  return new ImageResponse(
-    (
-      <Image
-        src={profile!.image}
-        alt={profile!.shortDescription}
-        width={500}
-        height={500}
-      />
-    ),
-    size
-  );
-}
